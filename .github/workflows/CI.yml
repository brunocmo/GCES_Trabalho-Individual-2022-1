name: "CI"

on: 
  workflow_call:
  push:
  pull_request:

jobs:
  build:
    needs: [test_Back, test_Front]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build application
        run: docker-compose up -d

  test_Back:
      runs-on: ubuntu-latest
      services:
        postgres:
          image: postgres:latest
          env:
            POSTGRES_DB: db  
            POSTGRES_USER: postgres     
            POSTGRES_PASSWORD: postgres
          ports:
            - 5432:5432
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
      steps:
        - uses: actions/checkout@v2
        - name: Install python
          working-directory: ./library_back
          run: pip install -r requirements.txt
        - name: Install coverage
          working-directory: ./library_back
          run: pip install coverage
        - name: Create env file
          working-directory: ./library_back
          run: |
            touch .env
            echo POSTGRES_DB=db >> .env
            echo POSTGRES_USER=postgres >> .env
            echo POSTGRES_PASSWORD=postgres >> .env
            echo POSTGRES_HOST=127.0.0.1 >> .env
            echo POSTGRES_PORT=5432 >> .env
            cat .env
        - name: Run makemigrations
          working-directory: ./library_back
          run: python manage.py makemigrations
        - name: Run migrate
          working-directory: ./library_back
          run: python manage.py migrate
        - name: Run test
          working-directory: ./library_back
          run: coverage run --source='.' manage.py test
        - name: Show coverage report
          working-directory: ./library_back
          run: coverage report     

  test_Front:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Install react
          working-directory: ./library_front
          run: npm install 
        - name: Run test
          working-directory: ./library_front
          run: npm run test -- --watchAll=false --coverage

  lint_Back:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Install flake8
          working-directory: ./library_back
          run: pip install flake8
        - name: Verify flake8
          working-directory: ./library_back
          run: flake8 --count --statistics --max-line-length=120  .

  lint_Front:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Install react
          working-directory: ./library_front
          run: npm install 
        - name: Install ESLint
          working-directory: ./library_front
          run: npm install eslint -g
        - name: Run ESLint
          run: eslint . --ext .js